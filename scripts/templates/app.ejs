<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />

    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <meta name="theme-color" content="#ffffff" />

    <link rel="prefetch" href="https://unpkg.com/htmx.org@2.0.4" />
    <link rel="prefetch" href="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js" />

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.1/normalize.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex/dist/katex.min.css" />
    <link rel="stylesheet" href="/assets/bundle.min.css" />
    <link rel="stylesheet" href="/index.css" />
  </head>
  <body>
    <aside>
      <input type="search" placeholder="🔍" />
      <ul>
        <% documents.map((document) => { %>
        <li data-key="/<%- document.filename %>">
          <a title="<%- document.title %>" href="/<%- document.filename %>"
            hx-get="/<%- document.filename %>.html" hx-target="#main"
            hx-swap="show:top" hx-push-url="/<%- document.filename %>"
            hx-on:click="select('/<%- document.filename %>')"><%- document.title %></a>
        </li>
        <% }) %>
      </ul>
    </aside>
    <main>
      <section id="main"></section>
      <footer>
        <small>© 박성범</small>
      </footer>
    </main>
    <script src="https://unpkg.com/htmx.org@2.0.4"></script>
    <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
    <script>
    function pathname() {
      const { pathname: path } = window.location;
      if (path && path !== '/') {
        const keys = new Set(<%- JSON.stringify(documents.map(doc => `/${doc.filename}`)) %>);
        if (!keys.has(path)) return '/http-404';
        return path;
      }
      return '/simonpedia';
    }

    function select(key) {
      htmx.findAll('aside > ul > li').forEach(el => htmx.removeClass(el, 'active'));
      htmx.addClass(htmx.find(`aside > ul > li[data-key="${key}"]`), 'active');
      return true;
    }

    function scrollToActive() {
      htmx.find('aside > ul > li.active').scrollIntoView({ block: 'center' });
      return true;
    }

    function toggleSidebar() {
      htmx.toggleClass('aside', 'hidden');
      return true;
    }

    htmx.ajax('GET', `${pathname()}.html`, '#main');

    document.addEventListener('DOMContentLoaded', (event) => {
      if (window.innerWidth < 800) toggleSidebar();
      select(pathname());
      scrollToActive();
    });

    document.body.addEventListener('htmx:afterSwap', event => {
      document.title = htmx.find('article > h1').textContent;
      mermaid.run({ querySelector: 'article div.mermaid' });
    });

    document.body.addEventListener('htmx:historyRestore', event => {
      select(pathname());
      scrollToActive();
    });
    </script>
  </body>
</html>
